// (C) Copyright 2014 Hewlett-Packard Development Company, L.P.

.form-field {
  position: relative;
  padding: $inuit-base-spacing-unit $inuit-base-spacing-unit
    halve($inuit-base-spacing-unit);
  border: $input-border-width solid $border-color;
  margin-bottom: -1px; // so borders overlap
  background-color: $form-field-background-color;

  @include media-query(lap-and-up) {
    width: $form-width;
    max-width: 100%;

    .form--compact & {
      width: $compact-form-width;
    }
  }

  @include media-query(palm) {
    width: 100vw;
  }

  .form--fill & {
    width: 100%;
  }

  &:last-child {
    margin-bottom: 0px;
  }

  &__label {
    position: absolute;
    top: quarter($inuit-base-spacing-unit);
    left: $inuit-base-spacing-unit + 1; // +1 for input border
    display: block;
    text-align: left;
    @include inuit-font-size($label-font-size, $inuit-base-spacing-unit);
    color: $secondary-text-color;
    z-index: 1;
  }

  &__contents {
    button {
      line-height: $inuit-base-spacing-unit;
    }

    > input[type=text],
    > input[type=range],
    > input[type=email],
    > input[type=password],
    > input[type=number],
    > select,
    > .search-input input,
    > textarea {
      display: block;
      width: 100%;
      margin-right: 0px;
      border-radius: 0px;
      @include inuit-font-size($content-font-size);
    }

    > input[type=text],
    > input[type=range],
    > input[type=email],
    > input[type=password],
    > input[type=number],
    > select,
    > .search-input input {
      padding-top: ($inuit-base-spacing-unit - $input-border-width);
      height: round($inuit-base-spacing-unit * 3);

      &:focus {
        padding-top: ($inuit-base-spacing-unit - ($input-border-width + 1));
      }
    }

    // Prevent textarea from adding extra bottom margin
    > textarea {
      vertical-align: top;
      padding-top: $inuit-base-spacing-unit + quarter($inuit-base-spacing-unit) - $input-border-width;
      height: auto;

      &:focus {
        padding-top: ($inuit-base-spacing-unit + quarter($inuit-base-spacing-unit) - ($input-border-width + 1));
      }
    }

    > select {
      height: round($inuit-base-spacing-unit * 3);
      background-position: bottom round($inuit-base-spacing-unit * 3/4)
        right $inuit-base-spacing-unit;
    }

    > input[type=range] {
      border: $input-border-width solid $border-color;
      padding-left: $inuit-base-spacing-unit;
      padding-right: $inuit-base-spacing-unit;
    }

    > .check-box,
    > .radio-button {
      display: block;
      margin-top: quarter($inuit-base-spacing-unit);
      @include inuit-font-size($content-font-size);

      &:first-of-type {
        margin-top: halve($inuit-base-spacing-unit);
      }
    }

    label.radio,
    label.checkbox {
      margin-right: $inuit-base-spacing-unit;
    }

    > .search-input {
      display: block;
    }

    > .table--selectable {
      margin-top: halve($inuit-base-spacing-unit);
      margin-left: - $inuit-base-spacing-unit;
      margin-right: - $inuit-base-spacing-unit;
      margin-bottom: - halve($inuit-base-spacing-unit);
      @include inuit-font-size($content-font-size);

      table {
        margin-bottom: 0px;

        td:first-child,
        th:first-child {
          padding-left: $inuit-base-spacing-unit;
        }
      }
    }
  }

  &__help {
    position: absolute;
    top: quarter($inuit-base-spacing-unit);
    right: $inuit-base-spacing-unit;
    display: block;
    color: $secondary-text-color;
    line-height: $inuit-base-spacing-unit;
  }

  &__error {
    position: absolute;
    top: quarter($inuit-base-spacing-unit);
    right: $inuit-base-spacing-unit;
    display: block;
    color: map-get($brand-status-colors, error);
    line-height: $inuit-base-spacing-unit;
    background-color: $background-color;
  }

  &--text {
    padding: 0px;
    border: none;
  }

  &--error {
    margin-bottom: 0px;

    input,
    textarea,
    select {
      border-color: map-get($brand-status-colors, error);
    }
  }
}
